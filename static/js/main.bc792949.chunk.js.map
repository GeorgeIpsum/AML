{"version":3,"sources":["models/deposit/deposit.ts","utilities/mersenne-twister.js","utilities/helpers.ts","models/status.ts","models/deposit-list-store/deposit-list-store.ts","models/context/context.ts","models/context/context-list-store.ts","models/root-store/root-store.ts","models/environment.ts","utilities/storage.ts","services/api/api-problem.ts","services/api/api-config.ts","services/api/api.ts","services/deposit-api/deposit-api.ts","services/context-api/context-api.ts","utilities/setup-root-store.ts","segments/dashboard/dashboard.tsx","components/context-select/context-select.tsx","components/deposit-form/deposit-form.tsx","components/deposit-list-item/deposit-list-item.tsx","dummies/button/button.tsx","segments/deposits/deposits.tsx","segments/projects/projects.tsx","segments/stats/stats.tsx","segments/options/options.tsx","components/root-component/root-component.tsx","segments/nav/nav.tsx","app/App.tsx","serviceWorker.js","index.tsx","assets/images/fruition.png"],"names":["DepositStatus","DepositModel","types","model","props","id","optional","identifier","value","string","status","enumeration","Object","values","unprocessed","dateAdded","Date","dateEdited","contextId","actions","self","setId","setValue","setStatus","views","root","getRoot","contextStore","findById","MersenneTwister","seed","undefined","getTime","this","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","mt","Array","mti","constructor","init_by_array","length","init_seed","prototype","s","init_key","key_length","i","j","k","random_int","y","mag01","kk","random_int31","random_incl","random","random_excl","random_long","_objectAssign$1","assign","target","TypeError","prop","obj","output","idx","arguments","source","nextKey","hasOwnProperty","call","_isPlaceholder","a","_curry1","fn","f1","apply","_isArray","isArray","val","toString","_isArrayLike","x","_isString","nodeType","twister","Math","Number","MAX_SAFE_INTEGER","recursive","LoadingStatus","UUIDGenerator","rand","crypto","getRandomValues","Uint8Array","abv","l","floor","replace","c","isNil","list","concat","flatt","jlen","result","ilen","compare","b","DepositListStoreModel","idle","deposits","array","currentlyTyping","setDeposits","clear","setCurrentlyTyping","addDeposit","context","deposit","create","changeDeposit","index","getEnv","slice","sort","d1","d2","loadDeposits","flow","pending","environment","depositApi","getDeposits","kind","done","error","chronoView","chronological","findByContext","contextID","filter","ContextModel","name","setName","depositStore","ContextListStoreModel","contexts","defaultContext","setContexts","setDefaultContext","find","addContext","changeContext","c1","c2","C1","toUpperCase","C2","findByName","RootStoreModel","projectStore","user","isDarkTheme","boolean","isNewStore","currentRoute","signIn","email","password","api","signInUser","changeTheme","setIsNewStore","setCurrentRoute","route","Environment","contextApi","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","load","key","VALUE","localStorage","getItem","JSON","parse","save","setItem","stringify","getGeneralApiProblem","response","problem","temporary","DEFAULT_API_CONFIG","url","timeout","Api","config","apisauce","auth","createUser","createUserWithEmailAndPassword","then","rsn","signInWithEmailAndPassword","signOutUser","signOut","useFirebase","baseURL","headers","app","username","get","ok","resultUser","DepositApi","Accept","e","console","message","completed","params","data","ContextApi","ROOT_STATE_STORAGE_KEY","setupRootStore","createEnvironment","env","storage","defaultRootStore","rootStore","getSnapshot","onSnapshot","snapshot","setup","defaultContextListStore","defaultDepositListStore","Dashboard","className","ContextSelect","observer","changeSelectedContext","event","setState","selectedContext","store","onFormSubmit","preventDefault","newContextInput","state","onInputChange","toggleOpen","isOpen","globalToggleOpen","window","addEventListener","removeEventListener","map","onClick","isDisabled","style","borderRadius","display","onSubmit","htmlFor","type","onChange","disabled","size","React","Component","DepositForm","formInput","clearForm","DepositListItem","onCheckChange","checked","changeStatus","depositId","date","textDecoration","toDateString","Button","variant","bg","background","children","Deposits","onChangeStatus","depositIndex","findIndex","d","actedUpon","changeShown","filters","hide","onClear","padding","marginRight","Projects","Stats","Options","RootComponent","navItem","Nav","triggerSegmentChange","segment","onSegmentChange","currentNav","initialNavState","navItems","navs","n","icon","src","fruition","alt","App","unsubscribeFromAuthStateChanges","_isMounted","authStateChange","userState","authStateChangeError","log","onAuthStateChanged","position","bottom","right","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bc792949.chunk.js","sourcesContent":["import { types, getRoot } from 'mobx-state-tree';\n\nexport enum DepositStatus {\n  unprocessed = \"unprocessed\",\n  trashed = \"trashed\",\n  incubated = \"incubated\",\n  referenced = \"referenced\",\n  actedUpon = \"acted upon\",\n  deferred = \"deferred\",\n  delegated = \"delegated\",\n  addedToProject = \"added to project\"\n};\n\nexport const DepositModel = types.model(\"Deposit\")\n  .props({\n    id: types.optional(types.identifier, 'xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx'),\n    value: types.string,\n    status: types.optional(types.enumeration<DepositStatus>(\"DepositStatus\", Object.values(DepositStatus)), DepositStatus.unprocessed),\n    dateAdded: types.optional(types.Date, new Date()),\n    dateEdited: types.optional(types.Date, new Date()),\n    contextId: types.optional(types.string, '')\n  })\n  .actions(self => ({\n    setId(value: string) {\n      self.id = value;\n    },\n    setValue(value: string) {\n      self.value = value;\n      self.dateEdited = new Date();\n    },\n    setStatus(value: DepositStatus) {\n      self.status = value;\n      self.dateEdited = new Date();\n    }\n  }))\n  .views(self => ({\n    get context() {\n      const root = getRoot(self);\n      if(root && root.contextStore) {\n        return root.contextStore.findById(self.contextId);\n      }\n      return '';\n    }\n  }));\n\ntype DepositType = typeof DepositModel.Type;\nexport interface Deposit extends DepositType {};\n\ntype DepositSnapshotType = typeof DepositModel.SnapshotType;\nexport interface DepositSnapshot extends DepositSnapshotType {};\n","/*\n  https://github.com/banksean wrapped Makoto Matsumoto and Takuji Nishimura's code in a namespace\n  so it's better encapsulated. Now you can have multiple random number generators\n  and they won't stomp all over eachother's state.\n  If you want to use this as a substitute for Math.random(), use the random()\n  method like so:\n  var m = new MersenneTwister();\n  var randomNumber = m.random();\n  You can also call the other genrand_{foo}() methods on the instance.\n  If you want to use a specific seed in order to get a repeatable random\n  sequence, pass an integer into the constructor:\n  var m = new MersenneTwister(123);\n  and that will always produce the same random sequence.\n  Sean McCullough (banksean@gmail.com)\n*/\n\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n   Before using, initialize the state by using init_seed(seed)\n   or init_by_array(init_key, key_length).\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\n\nconst MersenneTwister = function(seed) {\n\tif (seed === undefined) {\n\t\tseed = new Date().getTime();\n\t}\n\n\t/* Period parameters */\n\tthis.N = 624;\n\tthis.M = 397;\n\tthis.MATRIX_A = 0x9908b0df;   /* constant vector a */\n\tthis.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n\tthis.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n\tthis.mt = new Array(this.N); /* the array for the state vector */\n\tthis.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */\n\n\tif (seed.constructor === Array) {\n\t\tthis.init_by_array(seed, seed.length);\n\t}\n\telse {\n\t\tthis.init_seed(seed);\n\t}\n}\n\n/* initializes mt[N] with a seed */\n/* origin name init_genrand */\nMersenneTwister.prototype.init_seed = function(s) {\n\tthis.mt[0] = s >>> 0;\n\tfor (this.mti=1; this.mti<this.N; this.mti++) {\n\t\t// eslint-disable-next-line\n\t\tvar s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);\n\t\tthis.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)\n\t\t+ this.mti;\n\t\t/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t\t/* In the previous versions, MSBs of the seed affect   */\n\t\t/* only MSBs of the array mt[].                        */\n\t\t/* 2002/01/09 modified by Makoto Matsumoto             */\n\t\tthis.mt[this.mti] >>>= 0;\n\t\t/* for >32 bit machines */\n\t}\n}\n\n/* initialize by an array with array-length */\n/* init_key is the array for initializing keys */\n/* key_length is its length */\n/* slight change for C++, 2004/2/26 */\nMersenneTwister.prototype.init_by_array = function(init_key, key_length) {\n\tvar i, j, k;\n\tthis.init_seed(19650218);\n\ti=1; j=0;\n\tk = (this.N>key_length ? this.N : key_length);\n\tfor (; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30)\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))\n\t\t+ init_key[j] + j; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++; j++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t\tif (j>=key_length) j=0;\n\t}\n\tfor (k=this.N-1; k; k--) {\n\t\t// eslint-disable-next-line\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))\n\t\t- i; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t}\n\n\tthis.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n}\n\n/* generates a random number on [0,0xffffffff]-interval */\n/* origin name genrand_int32 */\nMersenneTwister.prototype.random_int = function() {\n\tvar y;\n\t// eslint-disable-next-line\n\tvar mag01 = new Array(0x0, this.MATRIX_A);\n\t/* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n\tif (this.mti >= this.N) { /* generate N words at one time */\n\t\tvar kk;\n\n\t\tif (this.mti === this.N+1)  /* if init_seed() has not been called, */\n\t\t\tthis.init_seed(5489);  /* a default initial seed is used */\n\n\t\tfor (kk=0;kk<this.N-this.M;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\tfor (;kk<this.N-1;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\ty = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n\t\tthis.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n\t\tthis.mti = 0;\n\t}\n\n\ty = this.mt[this.mti++];\n\n\t/* Tempering */\n\ty ^= (y >>> 11);\n\ty ^= (y << 7) & 0x9d2c5680;\n\ty ^= (y << 15) & 0xefc60000;\n\ty ^= (y >>> 18);\n\n\treturn y >>> 0;\n}\n\n/* generates a random number on [0,0x7fffffff]-interval */\n/* origin name genrand_int31 */\nMersenneTwister.prototype.random_int31 = function() {\n\treturn (this.random_int()>>>1);\n}\n\n/* generates a random number on [0,1]-real-interval */\n/* origin name genrand_real1 */\nMersenneTwister.prototype.random_incl = function() {\n\treturn this.random_int()*(1.0/4294967295.0);\n\t/* divided by 2^32-1 */\n}\n\n/* generates a random number on [0,1)-real-interval */\nMersenneTwister.prototype.random = function() {\n\treturn this.random_int()*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n}\n\n/* generates a random number on (0,1)-real-interval */\n/* origin name genrand_real3 */\nMersenneTwister.prototype.random_excl = function() {\n\treturn (this.random_int() + 0.5)*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n}\n\n/* generates a random number on [0,1) with 53-bit resolution*/\n/* origin name genrand_res53 */\nMersenneTwister.prototype.random_long = function() {\n\tvar a=this.random_int()>>>5, b=this.random_int()>>>6;\n\treturn(a*67108864.0+b)*(1.0/9007199254740992.0);\n}\n\n/* These real versions are due to Isaku Wada, 2002/01/09 added */\n\nexport default MersenneTwister;\n","//helpers.ts utility\nimport MersenneTwister from './mersenne-twister';\n\nexport function _has(prop, obj): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction _objectAssign(target) {\n  if(target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n  let output = Object(target);\n  let idx = 1;\n  let length = arguments.length;\n  while(idx < length) {\n    var source = arguments[idx];\n    if(source != null) {\n      for(var nextKey in source) {\n        if(_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nconst _objectAssign$1 = typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\nfunction _isPlaceholder(a) {\n  return a != null &&\n    typeof a === 'object' &&\n    a['@@functional/placeholder'] === true;\n}\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if(arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\nconst _isArray = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n\nfunction _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\nconst _isArrayLike = _curry1(function _isArrayLike(x) {\n  if(_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if(typeof x !== 'object') { return false; }\n  if(_isString(x)) { return false; }\n  if(x.nodeType === 1) { return !!x.length; }\n  if(x.length === 0) { return true; }\n  if(x.length > 0) { return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1); }\n  return false;\n});\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while(idx < ilen) {\n      if(_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while(j < jlen) {\n          //@ts-ignore\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        //@ts-ignore\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\n\n//these were created because window.crypto gives me lots of problems when running unit tests with jest. there was probably a better way for me to handle this, but this works\nconst twister = new MersenneTwister(Math.random()*Number.MAX_SAFE_INTEGER);\n\nfunction randomFloat() {\n  return twister.random();\n}\n\nfunction getRandomValues(abv) {\n  var l = abv.length;\n  while(l--) {\n    abv[l] = Math.floor(randomFloat() * 256);\n  }\n  return abv;\n}\n\n/**\n * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n * HERE BE THE EXPORTED FUNCTIONS\n * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n */\n\n \n/**\n * Adds a key value/ index value pair to an object, return original object if key or index already exists\n * \n * @param obj the object\n * @param key key value to be added\n * @param value value at said key value to be added\n * @param index index to use\n */\nexport const addToObject = (obj: Object, key: string, value: any, index: number): Object => {\n  let temp = {};\n  let i = 0;\n\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      if(i===index&&key&&value) {\n        temp[key] = value;\n      }\n      temp[prop] = obj[prop];\n      i++;\n    }\n  }\n  if(!index&&key&&value) {\n    temp[key] = value;\n  }\n  return temp;\n}\n\n/**\n * Debounce function\n * \n * @param fn the function to debounce\n */\nexport const debounce = (fn) => {\n  let timeout;\n\n  return function() {\n    let context = this;\n    let args = arguments;\n\n    if(timeout) {\n      window.cancelAnimationFrame(timeout);\n    }\n\n    timeout = window.requestAnimationFrame(function() {\n      fn.apply(context, args);\n    });\n  }\n}\n\n/**\n * Delay function call for some x milliseconds\n * \n * @param ms milliseconds to delay\n */\nexport const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n/**\n * Shuffles an array\n * \n * @param array the array to shuffle\n */\nexport const shuffle = (array: any[]): any[] => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while(0!==currentIndex) {\n    randomIndex = Math.floor(Math.random()*currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  \n  return array;\n}\n\n/**\n * Chooses a random item from an array\n * \n * @param array ...the array\n */\nexport const chooseRandomItem = (array: any[]): any => {\n  return array[Math.floor(Math.random()*array.length)];\n}\n\n/**\n * Converts an array into a CSV string\n * \n * @param array array to convert\n * @param delimiter delimiter to use between values. defaults to ','\n */\nexport const arrayToCsv = (array: any, delimiter: string = ','): string => {\n  return array.map(v => v.map(x => (isNaN(x) ? `\"${x.replace(/\"/g, '\"\"')}\"` : x)).join(delimiter)).join('\\n');\n}\n\n/**\n * Returns intersection of 2 arrays\n * \n * @param a first array\n * @param b second array\n */\nexport const intersection = (a: any[], b: any[]) => {\n  const s = new Set(b);\n  return a.filter(x => s.has(x));\n}\n\n/**\n * Generate a hash for an object\n * \n * @param object object to generate hash for\n * @param key \n */\nexport const toHash = (object: Object, key: string) => {\n  return Array.prototype.reduce.call(\n    object,\n    // eslint-disable-next-line\n    (acc: any, data, index) => ((acc[!key ? index : data[key]] = data), acc),\n    {}\n  );\n}\n\n/**\n * Generates a UUID in a browser\n */\nexport const UUIDGenerator = () => {\n  const rand = typeof crypto === 'object' ? crypto.getRandomValues(new Uint8Array(1)) : getRandomValues(new Uint8Array(1));\n  //@ts-ignore\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (c ^ (rand[0] & (15 >> (c / 4)))).toString(16)\n  );\n}\n\n/**\n * Get size of object, array, or string\n * \n * @param val array, object, or string to measure size of\n */\nexport const size = (val: any): number =>\n  Array.isArray(val)\n    ? val.length\n    : val && typeof val === 'object'\n    ? val.size || val.length || Object.keys(val).length\n    : typeof val === 'string'\n    ? new Blob([val]).size\n    : 0;\n\nexport const mergeAll = _curry1(function mergeAll(list) {\n  //@ts-ignore\n  return _objectAssign$1.apply(null, [{}].concat(list));\n});\n\nexport const flatten = _curry1(_makeFlat(true));\n\nexport const isNil = _curry1(function isNil(x) { return x == null; });\n\n/**\n * compares two (assumedly comparable) values, returns -1 on a > b, 1 on b > a, and 0 on a == b\n * @param a first value to be compared\n * @param b second value to be compared\n * @returns -1 (a > b), 1 (a < b), 0 (a == b)\n */\nexport const compare = (a: any, b: any): -1 | 1 | 0 => {\n  return (a > b) ? -1 : (a < b) ? 1 : 0;\n}\n","export enum LoadingStatus {\n  idle = \"idle\",\n  pending = \"pending\",\n  done = \"done\",\n  error = \"error\"\n};\n","import { types, getEnv, getRoot } from 'mobx-state-tree';\nimport { DepositModel, Deposit, DepositSnapshot, DepositStatus } from '../deposit';\n//import { RootStore } from '../root-store';\nimport { Environment } from '../environment';\nimport { flow } from 'mobx';\nimport { UUIDGenerator, compare } from '../../utilities/helpers';\nimport { LoadingStatus } from '../status';\n\nexport const DepositListStoreModel = types.model(\"DepositListStore\")\n  .props({\n    status: types.optional(types.enumeration<LoadingStatus>(\"DepositListLoadingStatus\", Object.values(LoadingStatus)), LoadingStatus.idle),\n    deposits: types.optional(types.array(DepositModel), []),\n    currentlyTyping: types.optional(types.string, '')\n  })\n  .actions(self => ({ //all setters go here\n    setStatus(value: LoadingStatus) {\n      self.status = value;\n    },\n    setDeposits(value: Deposit[] | DepositSnapshot[] | null) {\n      if(self.deposits) {\n        if(value) {\n          self.deposits.replace(value as any);\n        } else {\n          self.deposits.clear();\n        }\n      } else {\n        self.deposits = value as any;\n      }\n    },\n    setCurrentlyTyping(value: string) {\n      self.currentlyTyping = value;\n    },\n    addDeposit({value, status, context} = {value: '', status: DepositStatus.unprocessed, context: ''}): boolean {\n      if(self.deposits) {\n        const deposit: Deposit = DepositModel.create({\n          id: UUIDGenerator(),\n          value: value,\n          status: status,\n          dateAdded: new Date(),\n          dateEdited: new Date(),\n          contextId: context\n        });\n        const deposits = [...self.deposits, ...[deposit]];\n        self.deposits.replace(deposits as any);\n        return true;\n      } return false;\n    },\n    changeDeposit(index, {value, status}) {\n      if(self.deposits && self.deposits[index]) {\n        if(value && value!=='') {\n          self.deposits[index].setValue(value);\n          return true;\n        }\n        if(status && status!=='') {\n          self.deposits[index].setStatus(status);\n          return true;\n        } return false;\n      } return false;\n    }\n  }))\n  .views(self => ({\n    get environment() {\n      return getEnv(self) as Environment;\n    },\n    get rootStore() {\n      return getRoot(self) as any; //returning this as RootStore results in ts calling a circular reference\n    },\n    get isLoading() {\n      return self.status === \"pending\";\n    },\n    get chronological() {\n      return self.deposits.slice().sort((d1, d2) => {\n        return compare(d1.dateAdded.getTime(), d2.dateAdded.getTime());\n      });\n    }\n  }))\n  .actions(self => ({\n    loadDeposits: flow(function*() {\n      self.setStatus(LoadingStatus.pending);\n      try { \n        const result = yield self.environment.depositApi.getDeposits();\n\n        //@ts-ignore\n        if(result.kind === \"ok\") {\n          //@ts-ignore\n          self.setDeposits(result.deposits);\n          self.setStatus(LoadingStatus.done);\n        } else {\n          self.setStatus(LoadingStatus.error);\n        }\n      } catch {\n        self.setStatus(LoadingStatus.error);\n      }\n    }),\n  }))\n  .views(self => ({\n    chronoView(deposits?: any) {\n      if(deposits) {\n        return deposits.slice().sort((d1, d2) => {\n          return compare(d1.dateAdded.getTime(), d2.dateAdded.getTime());\n        });\n      } else {\n        return self.chronological;\n      }\n    },\n    findByContext(contextID: string) {\n      return self.deposits.filter((deposit) => deposit.contextId === contextID);\n    }\n  }));\n\ntype DepositStoreType = typeof DepositListStoreModel.Type;\nexport interface DepositStore extends DepositStoreType {};\n","import { types, getRoot } from 'mobx-state-tree';\n\nexport const ContextModel = types.model(\"Context\")\n  .props({\n    id: types.optional(types.identifier, 'xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx'),\n    name: types.optional(types.string, '')\n  })\n  .actions(self => ({\n    setName(value: string) {\n      self.name = value;\n    }\n  }))\n  .views(self => ({\n    get deposits() {\n      const root = getRoot(self);\n      if(root && root.depositStore) {\n        return root.depositStore.findByContext(self.id);\n      }\n      return [];\n    }\n  }));\n\ntype ContextType = typeof ContextModel.Type;\nexport interface Context extends ContextType {};\n\ntype ContextSnapshotType = typeof ContextModel.SnapshotType;\nexport interface ContextSnapshot extends ContextSnapshotType {};\n","import { types, getEnv, getRoot } from 'mobx-state-tree';\nimport { Environment } from '../environment';\nimport { LoadingStatus } from '../status';\nimport { ContextModel, Context, ContextSnapshot } from './context';\nimport { UUIDGenerator } from '../../utilities/helpers';\n\nexport const ContextListStoreModel = types.model(\"ContextListStore\")\n  .props({\n    status: types.optional(types.enumeration<LoadingStatus>(\"ContextListLoadingStatus\", Object.values(LoadingStatus)), LoadingStatus.idle),\n    contexts: types.optional(types.array(ContextModel), []),\n    defaultContext: types.optional(types.string, 'ERROR')\n  })\n  .actions(self => ({\n    setStatus(value: LoadingStatus) {\n      self.status = value;\n    },\n    setContexts(value: Context[] | ContextSnapshot[] | null) {\n      if(self.contexts) {\n        if(value) {\n          self.contexts.replace(value as any);\n        } else {\n          self.contexts.clear();\n        }\n      } else {\n        self.contexts = value as any;\n      }\n    },\n    setDefaultContext(id: string) {\n      if(self.contexts && self.contexts.find((c) => c.id === id)) {\n        self.defaultContext = id;\n      }\n    },\n    addContext(name: string = '') {\n      if(self.contexts) {\n        const context: Context = ContextModel.create({\n          id: UUIDGenerator(),\n          name: name\n        });\n        const contexts = [...self.contexts, ...[context]];\n        self.contexts.replace(contexts as any);\n        return true;\n      } return false;\n    },\n    changeContext(index, name?) {\n      if(self.contexts && self.contexts[index]) {\n        if(name) {\n          self.contexts[index].setName(name);\n          return true;\n        } return false;\n      } return false;\n    }\n  }))\n  .views(self => ({\n    get environment() {\n      return getEnv(self) as Environment;\n    },\n    get rootStore() {\n      return getRoot(self) as any;\n    },\n    get isLoading() {\n      return self.status === \"pending\";\n    },\n    get alphabetical() {\n      return self.contexts.slice().sort((c1, c2) => {\n        const C1 = c1.name.toUpperCase(); const C2 = c2.name.toUpperCase();\n        return (C2 < C1) ? -1 : (C1 > C2) ? 1 : 0;\n      });\n    }\n  }))\n  .actions(self => ({\n    findByName(name: string) {\n      const value = self.contexts.find((c) => c.name === name);\n      if(value) {\n        return value;\n      } return false;\n    },\n    findById(id: string) {\n      const value = self.contexts.find((c) => c.id === id);\n      if(value) {\n        return value;\n      } return false;\n    }\n  }));\n\ntype ContextStoreType = typeof ContextListStoreModel.Type;\nexport interface ContextStore extends ContextStoreType {};\n","import { types, getEnv } from 'mobx-state-tree';\n//add other store model imports here here\nimport { DepositListStoreModel } from '../deposit-list-store';\nimport { ContextListStoreModel } from '../context';\nimport { Environment } from '../environment';\n\n/**\n * The RootStore model\n */\nexport const RootStoreModel = types.model(\"RootStore\")\n  .props({\n    //add other stores here in format: someStore: types.optional(SomeStoreModel, {})\n    depositStore: types.optional(DepositListStoreModel, {}),\n    contextStore: types.optional(ContextListStoreModel, {}),\n    projectStore: types.optional(types.string, 'test'),\n    user: types.optional(types.string, ''),\n    isDarkTheme: types.optional(types.boolean, true),\n    isNewStore: types.optional(types.boolean, true),\n    currentRoute: types.optional(types.string, 'dashboard'),\n  })\n  .views(self => ({\n    get environment() {\n      return getEnv(self) as Environment;\n    }\n  }))\n  .actions(self => ({\n    signIn(email, password) {\n      return self.environment.api.signInUser(email, password);\n    },\n    changeTheme() {\n      self.isDarkTheme = !self.isDarkTheme;\n      return true;\n    },\n    setIsNewStore(isNewStore: boolean) {\n      self.isNewStore = isNewStore;\n    },\n    setCurrentRoute(route: string) {\n      self.currentRoute = route;\n    }\n  }));\n\n/**\n * The RootStore instance\n */\nexport type RootStore = typeof RootStoreModel.Type;\n\n\n/**\n * The RootStore data\n */\nexport type RootStoreSnapshot = typeof RootStoreModel.SnapshotType;\n","import { Api } from '../services/api';\nimport { DepositApi } from '../services/deposit-api';\nimport { ContextApi } from '../services/context-api';\n\nexport class Environment {\n  api: Api;\n  depositApi: DepositApi;\n  contextApi: ContextApi;\n};\n\nexport const firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n","//storage.ts utility\n/**\n * Loads string from localStorage.\n * \n * @param key The key to fetch\n */\nexport const loadString = (key: string): string | null => {\n  return localStorage.getItem(key);\n}\n\n/**\n * Saves a string value to localStorage.\n * \n * @param key The key to save to\n * @param value The string to save\n */\nexport const saveString = (key: string, value: string): boolean => {\n  try {\n    localStorage.setItem(key, value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Loads an object string from localStorage and returns the object.\n * \n * @param key The key to fetch\n */\nexport const load = (key: string): any | null => {\n  const VALUE = localStorage.getItem(key);\n  if(typeof VALUE === 'string') {\n    return JSON.parse(VALUE);\n  } else return null;\n}\n\n/**\n * Saves objects and all other values to localStorage.\n * \n * @param key The key to save to\n * @param value The value (can be an object) to save\n */\nexport const save = (key: string, value: any): boolean => {\n  try {\n    if(typeof value === 'object') {\n      localStorage.setItem(key, JSON.stringify(value));\n    } else {\n      localStorage.setItem(key, value);\n    }\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Removes a key-value pair from localStorage.\n * \n * @param key The key to remove\n */\nexport const remove = (key: string): boolean => {\n  try {\n    localStorage.removeItem(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Clears all localStorage.\n */\nexport const clear = (): boolean => {\n  try {\n    localStorage.clear();\n    return true;\n  } catch {\n    return false;\n  }\n}\n","import { ApiResponse } from 'apisauce';\n\nexport type GeneralApiProblem = \n  /**\n   * Times up.\n   */\n  | { kind: \"timeout\"; temporary: true }\n  /**\n   * Cannot connect to the server for some reason.\n   */\n  | { kind: \"cannot-connect\"; temporary: true }\n  /**\n   * The server experienced a problem. Any 5xx error.\n   */\n  | { kind: \"server\" }\n  /**\n   * We're not allowed because we haven't identified ourself. This is 401.\n   */\n  | { kind: \"unauthorized\" }\n  /**\n   * We don't have access to perform that request. This is 403.\n   */\n  | { kind: \"forbidden\" }\n  /**\n   * Unable to find that resource.  This is a 404.\n   */\n  | { kind: \"not-found\" }\n  /**\n   * All other 4xx series errors.\n   */\n  | { kind: \"rejected\" }\n  /**\n   * Something truly unexpected happened. Most likely can try again. This is a catch all.\n   */\n  | { kind: \"unknown\"; temporary: true }\n  /**\n   * The data we received is not in the expected format.\n   */\n  | { kind: \"bad-data\" }\n\n/**\n * Attempts to get a common cause of problems from an api response.\n *\n * @param response The api response.\n */\nexport function getGeneralApiProblem(response: ApiResponse<any>): GeneralApiProblem | void | null {\n  switch (response.problem) {\n    case \"CONNECTION_ERROR\":\n      return { kind: \"cannot-connect\", temporary: true };\n    case \"NETWORK_ERROR\":\n      return { kind: \"cannot-connect\", temporary: true };\n    case \"TIMEOUT_ERROR\":\n      return { kind: \"timeout\", temporary: true };\n    case \"SERVER_ERROR\":\n      return { kind: \"server\" };\n    case \"UNKNOWN_ERROR\":\n      return { kind: \"unknown\", temporary: true };\n    case \"CLIENT_ERROR\":\n      switch (response.status) {\n        case 401:\n          return { kind: \"unauthorized\" };\n        case 403:\n          return { kind: \"forbidden\" };\n        default:\n          return { kind: \"rejected\" };\n      }\n    case \"CANCEL_ERROR\":\n      return null;\n  }\n\n  return null;\n}\n","\n\nexport interface ApiConfig {\n  url: string,\n  timeout: number,\n}\n\nexport const DEFAULT_API_CONFIG: ApiConfig = {\n  url: \"https://api.github.com\",\n  timeout: 1000,\n}\n","import { ApisauceInstance, create, ApiResponse } from 'apisauce';\nimport { getGeneralApiProblem } from './api-problem';\nimport { ApiConfig, DEFAULT_API_CONFIG } from './api-config';\nimport * as Types from './api.types';\nimport * as app from 'firebase';\nimport { firebaseConfig } from '../../models/environment';\n\nexport class Api {\n  apisauce: ApisauceInstance;\n  config: ApiConfig;\n  auth: app.auth.Auth;\n  user: app.User | null | any;\n\n  constructor(config: ApiConfig = DEFAULT_API_CONFIG) {\n    this.config = config;\n    this.user = {\n      email: 'test'\n    };\n  }\n\n  setup(useFirebase?: boolean) {\n    this.apisauce = create({\n      baseURL: this.config.url,\n      timeout: this.config.timeout,\n      headers: {},\n    });\n\n    if(useFirebase) {\n      app.initializeApp(firebaseConfig);\n\n      this.auth = app.auth();\n    }\n  }\n\n  async getUser(username: string): Promise<Types.GetUserResult> {\n    const response: ApiResponse<any> = await this.apisauce.get(`/users/${username}`);\n\n    if(!response.ok) {\n      const problem = getGeneralApiProblem(response);\n      if(problem) return problem;\n    }\n\n    try {\n      const resultUser: Types.User = {\n\n      }\n      return { kind: \"ok\", user: resultUser };\n    } catch {\n      return { kind: \"bad-data\" };\n    }\n  }\n\n  createUser = (email, password) => {\n    this.auth.createUserWithEmailAndPassword(email, password).then((val) => {\n      this.user = val.user as app.User;\n    }, (rsn) => {\n      this.signInUser(email, password);\n    });\n  }\n\n  signInUser = (email, password): Promise<app.auth.UserCredential> => {\n    let a = this.auth.signInWithEmailAndPassword(email, password);\n    return a;\n    // this.auth.signInWithEmailAndPassword(email, password).then((val) => { console.log('yesy',val); this.user = val.user; console.log(this.user); }, (rsn) => { console.log('no',rsn) });\n  }\n\n  signOutUser = () => this.auth.signOut();\n}\n","import { ApisauceInstance, create, ApiResponse } from 'apisauce';\nimport { getGeneralApiProblem } from '../api/api-problem';\nimport { ApiConfig, DEFAULT_API_CONFIG } from '../api/api-config';\nimport * as Types from './deposit-api.types';\nimport { isNil } from '../../utilities/helpers';\nimport { DepositSnapshot } from '../../models/deposit';\n\nexport class DepositApi {\n  apisauce: ApisauceInstance;\n\n  config: ApiConfig;\n\n  constructor(config: ApiConfig = DEFAULT_API_CONFIG) {\n    this.config = config;\n  }\n\n  setup() {\n    try {\n      this.apisauce = create({\n        baseURL: this.config.url,\n        timeout: this.config.timeout,\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n    } catch(e) {\n      console.error(e.message);\n    }\n  }\n\n  async getDeposits(completed?: boolean): Promise<Types.GetDepositsResult> {\n    const params = isNil(completed) ? {} : { completed };\n    const response: ApiResponse<any> = await this.apisauce.get(`/deposits`, params);\n    \n    if(!response.ok) {\n      const problem = getGeneralApiProblem(response);\n      if(problem) return problem;\n    }\n\n    try {\n      const deposits: DepositSnapshot[] = response.data;\n      return { kind: \"ok\", deposits };\n    } catch {\n      return { kind: \"bad-data\" };\n    }\n  }\n}\n","import { ApisauceInstance, create, ApiResponse } from 'apisauce';\nimport { getGeneralApiProblem } from '../api/api-problem';\nimport { ApiConfig, DEFAULT_API_CONFIG } from '../api/api-config';\nimport * as Types from './context-api.types';\nimport { isNil } from '../../utilities/helpers';\nimport { ContextSnapshot } from '../../models/context';\n\nexport class ContextApi {\n  apisauce: ApisauceInstance;\n\n  config: ApiConfig;\n\n  constructor(config: ApiConfig = DEFAULT_API_CONFIG) {\n    this.config = config;\n  }\n\n  setup() {\n    try {\n      this.apisauce = create({\n        baseURL: this.config.url,\n        timeout: this.config.timeout,\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n    } catch(e) {\n      console.error(e.message);\n    }\n  }\n\n  async getContexts(completed?: boolean): Promise<Types.GetContextsResult> {\n    const params = isNil(completed) ? {} : { completed };\n    const response: ApiResponse<any> = await this.apisauce.get(`/contexts`, params);\n\n    if(!response.ok) {\n      const problem = getGeneralApiProblem(response);\n      if(problem) return problem;\n    }\n\n    try {\n      const contexts: ContextSnapshot[] = response.data;\n      return { kind: \"ok\", contexts };\n    } catch {\n      return { kind: \"bad-data\" };\n    }\n  }\n}\n","import { onSnapshot, getSnapshot } from 'mobx-state-tree';\nimport { RootStoreModel, RootStore } from '../models/root-store';\nimport { Environment } from '../models/environment';\nimport * as storage from './storage';\nimport { Api } from '../services/api';\nimport { DepositApi } from '../services/deposit-api';\nimport { ContextApi } from '../services/context-api';\nimport { ContextListStoreModel } from '../models/context';\nimport { DepositListStoreModel } from '../models/deposit-list-store';\nimport { DepositStatus } from '../models/deposit';\n\nconst ROOT_STATE_STORAGE_KEY = \"AML\";\n\nexport async function setupRootStore(useFirebase?: boolean) {\n  let rootStore: RootStore;\n  let data: any;\n\n  const env = await createEnvironment(useFirebase);\n  try {\n    data = (await storage.load(ROOT_STATE_STORAGE_KEY)) || defaultRootStore();\n    rootStore = RootStoreModel.create(data, env);\n  } catch {\n    rootStore = RootStoreModel.create(defaultRootStore(), env);\n  }\n\n  if(rootStore.isNewStore) {\n    rootStore.setIsNewStore(false);\n    storage.save(ROOT_STATE_STORAGE_KEY, getSnapshot(rootStore));\n  }\n\n  onSnapshot(rootStore, snapshot => storage.save(ROOT_STATE_STORAGE_KEY, snapshot));\n\n  return rootStore;\n}\n\nexport async function createEnvironment(useFirebase?: boolean) {\n  const env = new Environment();\n\n  env.api = new Api();\n  env.depositApi = new DepositApi();\n  env.contextApi = new ContextApi();\n\n  await env.api.setup(useFirebase);\n  await env.depositApi.setup();\n  await env.contextApi.setup();\n\n  return env;\n}\n\nexport function defaultRootStore() {\n  const defaultContextListStore = ContextListStoreModel.create();\n  defaultContextListStore.addContext('Default');\n  defaultContextListStore.setDefaultContext(defaultContextListStore.contexts[0].id);\n\n  const defaultDepositListStore = DepositListStoreModel.create();\n  defaultDepositListStore.addDeposit({\n    value: 'Hey there! Welcome to fruition.',\n    status: DepositStatus.unprocessed,\n    context: defaultContextListStore.contexts[0].id\n  });\n\n  return { depositStore: defaultDepositListStore, contextStore: defaultContextListStore };\n}\n","import React from 'react';\nimport './dashboard.scss';\n\nexport default function Dashboard(props) {\n  return(\n    <div className=\"Dashboard\">Soon<sup>TM</sup></div>\n  );\n}\n","import React from 'react';\nimport './context-select.scss';\nimport { observer } from 'mobx-react';\nimport { PlusCircle } from 'react-feather';\n\n@observer\nexport default class ContextSelect extends React.Component<{store: any}, {selectedContext: any, isOpen: boolean, newContextInput: string, error: string}> {\n  constructor(props) {\n    super(props);\n\n    const defaultContext = this.props.store.findById(this.props.store.defaultContext);\n    this.state = {\n      selectedContext: defaultContext,\n      isOpen: false,\n      newContextInput: '',\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.globalToggleOpen, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.globalToggleOpen, true);\n  }\n\n  changeSelectedContext = (event: any) => {\n    const id = event.target.id;\n    this.setState({selectedContext: this.props.store.findById(id)});\n    this.props.store.setDefaultContext(id);\n  }\n\n  onFormSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newContextInput } = this.state;\n    const { store } = this.props;\n    if(newContextInput.length !== 0 && !store.findByName(newContextInput)) {\n      store.addContext(newContextInput);\n      this.setState({newContextInput: ''});\n    }\n  }\n\n  onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({newContextInput: event.target.value});\n  }\n\n  toggleOpen = () => {\n    this.setState(state => ({isOpen: !state.isOpen}));\n  }\n\n  globalToggleOpen = (event) => {\n    if(event.target.id !== \"currentContext\"\n    && event.target.id !== \"addNewContext\"\n    && event.target.id !== \"newContextForm\"\n    && event.target.id !== \"newContextLabel\") {\n      this.setState({isOpen: false});\n    }\n  }\n\n  render() {\n    const { isOpen, selectedContext, newContextInput } = this.state;\n    const { store } = this.props;\n    const contexts = store.contexts.slice().filter((c) => c.id !== selectedContext.id).map(\n      (c) => (<div key={c.id} id={c.id} className=\"context\" onClick={this.changeSelectedContext}>{ c.name }</div>)\n    );\n    const isDisabled = newContextInput.length === 0 || store.findByName(newContextInput);\n    return(\n      <div className=\"Context\">\n        <div className=\"title\">CONTEXT</div>\n        <div id=\"currentContext\" className=\"current-context\" onClick={this.toggleOpen} style={{borderRadius: isOpen ? '4px 4px 0 0' : ''}}>\n          <div className=\"context\">{ selectedContext.name }</div>\n          <div className=\"arrow\">\n            <div className=\"arrow-inner\"></div>\n          </div>\n        </div>\n        <div className=\"other-contexts\" style={{display: isOpen ? 'block' : 'none'}}>\n          { contexts }\n          <div className=\"add-context\">\n            <form id=\"newContextForm\" onSubmit={this.onFormSubmit}>\n              <label id=\"newContextLabel\" htmlFor=\"addNewContext\">ADD CONTEXT</label>\n              <input id=\"addNewContext\" type=\"text\" value={newContextInput} onChange={this.onInputChange} />\n              <button type=\"submit\" disabled={isDisabled}>\n                <PlusCircle size={16} />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport './deposit-form.scss';\nimport { X } from 'react-feather';\nimport ContextSelect from '../context-select';\nimport { DepositStatus } from '../../models/deposit';\n\ninterface DepositFormProps {\n  store: any,\n  context: any\n};\n\ninterface DepositFormState {\n  formInput: string\n};\n\n@observer\nexport default class DepositForm extends React.Component<DepositFormProps, DepositFormState> {\n  constructor(props) {\n    super(props);\n\n    this.state = { formInput: props.store.currentlyTyping };\n  }\n  \n  onFormSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if(this.state.formInput !== '') {\n      const deposit = {\n        value: this.state.formInput,\n        status: DepositStatus.unprocessed,\n        context: this.props.context.defaultContext\n      };\n      this.props.store.addDeposit(deposit);\n    }\n    this.setState({ formInput: '' });\n  }\n\n  onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ formInput: event.target.value });\n    this.props.store.setCurrentlyTyping(event.target.value);\n  }\n\n  clearForm = (event?: any) => {\n    this.setState({ formInput: '' });\n    this.props.store.setCurrentlyTyping('');\n  }\n\n  render() {\n    const contexts = this.props.context;\n\n    return (\n      <div className=\"Deposit-Form\">\n        <form onSubmit={this.onFormSubmit} className=\"Deposit-Form-Form\">\n          <input type=\"text\" value={this.state.formInput} onChange={this.onInputChange}  className=\"Deposit-Form-Input\" />\n          <div className=\"Input-Border\"></div>\n          <input type=\"submit\" className=\"Button Deposit-Submit\" value=\"Add\" />\n          {this.state.formInput !== ''\n            ? (<button type=\"button\" className=\"Button Deposit-Clear\" onClick={this.clearForm}><X size={20} /></button>)\n            : null \n          }\n        </form>\n\n        <div className=\"Selections\">\n          <ContextSelect store={contexts} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './deposit-list-item.scss';\n\ntype DepositListItemProps = {\n\tvalue: string,\n\tdate: Date,\n\tstatus: boolean,\n\tchangeStatus: any,\n\tcontext: any,\n\tdepositId: string\n};\ntype DepositListItemState = {\n\tchecked: boolean\n};\n\nexport default class DepositListItem extends React.Component<DepositListItemProps, DepositListItemState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { checked: props.status };\n\t}\n\n\tonCheckChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tthis.setState({\n\t\t\tchecked: !this.state.checked\n\t\t});\n\t\tthis.props.changeStatus(event, this.props.depositId);\n\t}\n\n\trender() {\n\t\tconst { value, date, context } = this.props;\n\t\tconst { checked } = this.state;\n\t\treturn(\n\t\t\t<div className=\"Deposit-List-Item\">\n\t\t\t\t<div className=\"Deposit-Check\">\n\t\t\t\t\t<input type=\"checkbox\" checked={checked} onChange={this.onCheckChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Deposit-Value\">\n\t\t\t\t\t<div className=\"Value\" style={{textDecoration: checked ? 'line-through' : 'none'}}>{value}</div>\n\t\t\t\t\t<div className=\"subitems\">\n\t\t\t\t\t\t<div className=\"Context\">{ context.name }</div>\n\t\t\t\t\t\t<div className=\"Date\">{ date.toDateString() }</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport './button.scss';\n\nconst Button = (props: any) => {\n  const variant = props.variant && props.variant;\n  let bg = \"#3454D1\";\n  if(variant) {\n    switch(variant) {\n      case \"theme\":\n        bg = \"#922D50\";\n        break;\n      default:\n        bg = \"#3454D1\";\n        break;\n    }\n  }\n\n  return(\n    <button style={{background: bg, ...props.style}} type=\"button\" className=\"Button\" onClick={props.onClick}>{props.children}</button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { DepositStore } from '../../models/deposit-list-store';\nimport { DepositStatus } from '../../models/deposit';\nimport { observer } from 'mobx-react';\nimport './deposits.scss';\nimport DepositForm from '../../components/deposit-form';\nimport DepositListItem from '../../components/deposit-list-item';\nimport Button from '../../dummies/button';\nimport { ContextStore } from '../../models/context';\n\ninterface DepositsProps {\n  depositStore: DepositStore;\n  contextStore: ContextStore;\n}\n\ninterface DepositsState {\n  filters: any\n}\n\n@observer\nexport default class Deposits extends React.Component<DepositsProps, DepositsState> {\n  constructor(props) {\n    super(props);\n\n    this.state = { filters: { hide: false } };\n  }\n  onChangeStatus = (event: any, id: string) => {\n    const depositIndex = this.props.depositStore.deposits.findIndex((d) => d.id === id);\n    this.props.depositStore.changeDeposit(depositIndex, {value: '', status: this.props.depositStore.deposits[depositIndex].status === DepositStatus.unprocessed ? DepositStatus.actedUpon : DepositStatus.unprocessed});\n  }\n\n  changeShown = () => {\n    this.setState(state => ({ filters: {hide: !state.filters.hide} }));\n  }\n\n  onClear = (event?: any) => {\n    this.props.depositStore.setDeposits(null);\n  }\n\n  render() {\n    const deposits = this.props.depositStore.chronological.map((d) => {\n      if(!this.state.filters.hide) {\n        if(d.status===DepositStatus.unprocessed) {\n          return (<DepositListItem key={d.id} depositId={d.id} value={d.value} status={d.status !== DepositStatus.unprocessed} date={d.dateAdded} changeStatus={this.onChangeStatus} context={this.props.contextStore.findById(d.contextId)} />)\n        } else {\n          return null;\n        }\n      } else {\n        return (<DepositListItem key={d.id} depositId={d.id} value={d.value} status={d.status !== DepositStatus.unprocessed} date={d.dateAdded} changeStatus={this.onChangeStatus} context={this.props.contextStore.findById(d.contextId)} />)\n      }\n    }) as any;\n\n    return (\n      <div className=\"Deposits\">\n        <DepositForm store={this.props.depositStore} context={this.props.contextStore} />\n        <div className=\"Deposit-List\">\n          { deposits }\n        </div>\n        <Button style={{padding: '0.5rem', marginRight: '0.4rem'}} onClick={this.onClear}>Clear Deposits</Button>\n        <Button style={{padding: '0.5rem'}} onClick={this.changeShown}>{ this.state.filters.hide ? 'Hide Finished' : 'Show Finished' }</Button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './projects.scss';\n\nexport default function Projects(props) {\n  return(\n    <div className=\"Projects\">Soon<sup>TM</sup></div>\n  );\n}\n","import React from 'react';\nimport './stats.scss';\n\nexport default function Stats(props) {\n  return(\n    <div className=\"Stats\">Soon<sup>TM</sup></div>\n  );\n}\n","import React from 'react';\n\nexport default function Options(props) {\n  return (<div>Coming Soon!</div>);\n}\n","import React from 'react';\nimport { RootStore } from '../../models/root-store';\nimport { DepositStore } from '../../models/deposit-list-store';\nimport { ContextStore } from '../../models/context';\nimport { observer } from 'mobx-react';\nimport './root-component.scss';\nimport Dashboard from '../../segments/dashboard';\nimport Deposits from '../../segments/deposits';\nimport Projects from '../../segments/projects';\nimport Stats from '../../segments/stats';\nimport Options from '../../segments/options';\n\ninterface RootComponentProps {\n  rootStore: RootStore;\n  depositStore: DepositStore;\n  contextStore: ContextStore;\n  currentRoute: string;\n}\n\ninterface RootComponentState {\n}\n\n@observer\nexport default class RootComponent extends React.Component<RootComponentProps, RootComponentState> {\n\n  render() {\n    const { depositStore, contextStore, currentRoute } = this.props;\n    let navItem;\n    switch(currentRoute) {\n      case \"dashboard\":\n        navItem = (<Dashboard />);\n        break;\n      case \"deposits\":\n        navItem = (<Deposits depositStore={depositStore} contextStore={contextStore} />);\n        break;\n      case \"projects\":\n        navItem = (<Projects />);\n        break;\n      case \"stats\":\n        navItem = (<Stats />);\n        break;\n      case \"options\":\n        navItem = (<Options />);\n        break;\n      default:\n        navItem = (<Deposits depositStore={depositStore} contextStore={contextStore} />);\n        break;\n    }\n\n    return (\n      <div className=\"Root\">\n        <div className=\"displayed-segment\">\n          { navItem }\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './nav.scss';\nimport fruition from '../../assets/images/fruition.png';\n\ninterface NavProps {\n  onSegmentChange: any,\n  initialNavState: any,\n  navItems: any\n}\n\ninterface NavState {\n  currentNav: any\n}\n\nexport default class Nav extends React.Component<NavProps, NavState> {\n  constructor(props) {\n    super(props);\n\n    this.state = { currentNav: props.initialNavState };\n  }\n\n  triggerSegmentChange = (event: any) => {\n    const segment = event.target.id;\n    this.props.onSegmentChange(segment);\n    this.setState({ currentNav: segment });\n  }\n\n  render() {\n    const { navItems } = this.props;\n    const { currentNav } = this.state;\n    const navs = navItems.slice().map((n) => (\n      <div key={n.name} className={n.name===currentNav ? \"Nav-Item Active\" : \"Nav-Item\"} id={n.name} onClick={this.triggerSegmentChange}>\n        <div className=\"nav-icon\">{n.icon}</div>\n        {/* <div className=\"nav-text\">{n.name}</div> */}\n      </div>\n    ));\n\n    return (\n      <div className=\"Nav\">\n        { navs }\n        <div className=\"Nav-Item\">\n          <img src={fruition} alt=\"logo\" className=\"logo\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { RootStore } from '../models/root-store';\nimport { setupRootStore } from '../utilities/setup-root-store';\nimport RootComponent from '../components/root-component';\nimport { observer } from 'mobx-react';\nimport Nav from '../segments/nav';\nimport { Grid, CheckCircle, Layers, PieChart, Settings } from 'react-feather';\nimport Button from '../dummies/button';\n\ninterface AppState {\n  rootStore?: RootStore,\n  userState: any,\n}\n\n@observer\nexport default class App extends React.Component<{}, AppState> {\n  navItems: any;\n  unsubscribeFromAuthStateChanges: firebase.Unsubscribe;\n  _isMounted: boolean = false;\n\n  async componentDidMount() {\n    this._isMounted = true;\n    this.navItems = [\n      {\n        name: \"dashboard\",\n        icon: (<Grid size={24} />)\n      }, {\n        name: \"deposits\",\n        icon: (<CheckCircle size={24} />)\n      }, {\n        name: \"projects\",\n        icon: (<Layers size={24} />)\n      }, {\n        name: \"stats\",\n        icon: (<PieChart size={24} />)\n      }, {\n        name: \"options\",\n        icon: (<Settings size={24} />)\n      }\n    ];\n\n    const rootStore = await setupRootStore(false);\n\n    if(this._isMounted) {\n      this.setState({\n        userState: {},\n        rootStore\n      });\n    }\n\n    if(rootStore.environment.api.auth) {\n      this.unsubscribeFromAuthStateChanges = rootStore.environment.api.auth.onAuthStateChanged(this.authStateChange, this.authStateChangeError);\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.unsubscribeFromAuthStateChanges) {\n      this.unsubscribeFromAuthStateChanges();\n    }\n    this._isMounted = false;\n  }\n\n  authStateChange = (val) => {\n    if(val && val.email && this._isMounted) {\n      this.setState({\n        userState: {\n          email: val.email\n        }\n      });\n    } else if(this._isMounted) {\n      this.setState({\n        userState: {\n          email: \"not logged in\"\n        }\n      });\n    }\n  }\n\n  authStateChangeError = (error) => {\n    console.log(error);\n  }\n\n  changeTheme = () => {\n    this.state.rootStore && this.state.rootStore.changeTheme();\n  }\n\n  onSegmentChange = (segment: string) => {\n    this.state.rootStore && this.state.rootStore.setCurrentRoute(segment);\n  }\n  \n  render() {\n    const rootStore = this.state && this.state.rootStore;\n\n    if(!rootStore) {\n      return (\n        <div>Initializing...</div>\n      );\n    }\n\n    const depositStore = rootStore.depositStore;\n    const contextStore = rootStore.contextStore;\n\n    return (\n      <div className={ rootStore.isDarkTheme ? \"App Dark\" : \"App Light\" }>\n        <Nav onSegmentChange={this.onSegmentChange} initialNavState={rootStore.currentRoute} navItems={this.navItems} />\n        <div className=\"App-inner\">\n          <RootComponent currentRoute={rootStore.currentRoute} rootStore={rootStore} depositStore={depositStore} contextStore={contextStore} />\n        </div>\n        <Button variant=\"theme\" style={{position: 'fixed', bottom: '1rem', right: '1rem', padding: '0.6rem'}} onClick={this.changeTheme}>Change Theme</Button>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/fruition.6e664e81.png\";"],"sourceRoot":""}