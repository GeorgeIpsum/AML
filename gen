#!/bin/bash

TYPE=$1
NAME=$2

if [ -z "$NAME" ]; then
  echo "No name provided"
  exit 0
fi

if [ "$TYPE" = "c" ] || [ "$TYPE" = "component" ]; then
  COMPONENTNAME="src/components/${NAME}"

  if [ -d "$COMPONENTNAME" ]; then
    echo "Component with name ${NAME} already exists."
    exit 0
  fi

  mkdir -p $COMPONENTNAME

  printf '%s\n' "@import '../../assets/styles.scss';" "" ".${NAME} {}" > "${COMPONENTNAME}/${NAME}.scss"
  printf '%b\n' "import React from 'react';" "import './${NAME}.scss';" "" "type ${NAME}Props = {};" "type ${NAME}State = {};" "" "export default class ${NAME} extends React.Component<${NAME}Props, ${NAME}State> {" "\trender() {" "\t\treturn(" "\t\t\t<div className=\"${NAME}\"></div>" "\t\t);" "\t}" "}"> "${COMPONENTNAME}/${NAME}.tsx"
  printf '%b\n' "import React from 'react';" "import ReactDOM from 'react-dom';" "import ${NAME} from './${NAME}';" "" "it('renders without crashing', () => {" "\tconst div = document.createElement('div');" "\tReactDOM.render(<${NAME} />, div);" "\tReactDOM.unmountComponentAtNode(div);" "});" > "${COMPONENTNAME}/${NAME}.test.tsx"
  printf '%s\n' "export { default } from './${NAME}';" > "${COMPONENTNAME}/index.ts"
elif [ "$TYPE" = "d" ] || [ "$TYPE" = "dummy" ]; then
  DUMMYNAME="src/dummies/${NAME}"

  if [ -d "$DUMMYNAME" ]; then
    echo "Dummy component with name ${NAME} already exists."
    exit 0
  fi

  mkdir -p $DUMMYNAME

  printf '%s\n' "@import '../../assets/styles.scss';" "" ".${NAME} {}" > "${COMPONENTNAME}/${NAME}.scss"
  printf '%b\n' "import React from 'react';" "import './${NAME}.scss';" "" "export default function ${NAME}(props) {" "\treturn(" "\t\t<div className=\"${NAME}\"></div>" "\t);" "}"> "${DUMMYNAME}/${NAME}.tsx"
  printf '%b\n' "import React from 'react';" "import ReactDOM from 'react-dom';" "import ${NAME} from './${NAME}';" "" "it('renders without crashing', () => {" "\tconst div = document.createElement('div');" "\tReactDOM.render(<${NAME} />, div);" "\tReactDOM.unmountComponentAtNode(div);" "});" > "${DUMMYNAME}/${NAME}.test.tsx"
  printf '%s\n' "export { default } from './${NAME}';" > "${DUMMYNAME}/index.ts"
elif [ "$TYPE" = "u" ] || [ "$TYPE" = "utility" ]; then
  UTILITYNAME="src/utilities/${NAME}.ts"

  if [ -d "$UTILITYNAME" ]; then
    echo "Utility with name ${NAME} already exists."
    exit 0
  fi

  printf '%s\n' "//${NAME}.ts utility" > $UTILITYNAME
else
  echo "Invalid arguments"
fi