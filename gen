#!/bin/bash

TYPE=$1
NAME=$2

if [ -z "$NAME" ]; then
  echo "No name provided"
  exit 0
fi

if [ "$TYPE" = "c" ] || [ "$TYPE" = "component" ]; then
  COMPONENTNAME="src/components/${NAME}"

  if [ -d "$COMPONENTNAME" ]; then
    echo "Component with name ${NAME} already exists."
    exit 0
  fi

  mkdir -p $COMPONENTNAME

  printf '%s\n' ".${NAME} {}" > "${COMPONENTNAME}/${NAME}.css"
  printf '%b\n' "import React from 'react';" "import './${NAME}.css';" "" "function ${NAME}() {" "\treturn(" "\t\t<div className=\"${NAME}\"></div>" "\t);" "}" "" "export default ${NAME};"> "${COMPONENTNAME}/${NAME}.tsx"
  printf '%b\n' "import React from 'react';" "import ReactDOM from 'react-dom';" "import ${NAME} from ./${NAME};" "it('renders without crashing', ()=> {" "\tconst div = document.createElement('div');" "\tReactDOM.render(<${NAME} />, div);" "\tReactDOM.unmountComponentAtNode(div);" "});" > "${COMPONENTNAME}/${NAME}.test.tsx"
  printf '%s\n' "export { default } from './${NAME}';" > "${COMPONENTNAME}/index.ts"
elif [ "$TYPE" = "u" ] || [ "$TYPE" = "utility" ]; then
  UTILITYNAME="src/utilities/${NAME}.js"

  if [ -d "$UTILITYNAME" ]; then
    echo "Utility with name ${NAME} already exists."
    exit 0
  fi

  printf '%s\n' "//${NAME}.ts utility" > "${NAME}.ts"
else
  echo "Invalid arguments"
fi